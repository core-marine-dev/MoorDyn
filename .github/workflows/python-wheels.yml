name: Python-Wheels

on:
  push:
    branches: [ $default-branch, master, python ]

permissions: write-all

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VTK_VERSION_MAJOR: 9
  VTK_VERSION_MINOR: 2
  VTK_VERSION_PATCH: 6

jobs:
  build_wheels:
    name: Build Python wheels x86_64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x' 

      - name: Create setup.py
        run: |
            mv wrappers/python/wheels.github/* ./
            python set_version.py
            python set_eigen_data.py
            rm set_version.py set_eigen_data.py
            cat pyproject.toml
        shell: bash

      - name: Build the source distribution
        run: |
            python -m pip install -U pip setuptools
            python setup.py sdist
        if: runner.os == 'Linux'

      - uses: actions/upload-artifact@v4
        id: build_wheels
        with:
          name: python-wheels-sdist
          path: ./dist/*

  build_Linux_x86_64:
    name: Build Linux_x86_64
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["ubuntu-22.04"]'
      arch: "x86_64"
    secrets: inherit

  build_Windows_AMD64:
    name: Build Windows_AMD64
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["windows-latest"]'
      arch: "AMD64"
    secrets: inherit

  build_MacOS_x86_64:
    name: Build MacOS_x86_64
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["macOS-latest"]'
      arch: "x86_64"
    secrets: inherit

  build_Linux_i686:
    name: Build Linux_i686
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["ubuntu-22.04"]'
      arch: "i686"
    secrets: inherit

  build_Linux_aarch64:
    name: Build Linux_aarch64
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["ubuntu-22.04"]'
      arch: "aarch64"
    secrets: inherit

  build_Linux_ppc64le:
    name: Build Linux_ppc64le
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["ubuntu-22.04"]'
      arch: "ppc64le"
    secrets: inherit

  build_Linux_s390x:
    name: Build Linux_s390x
    uses: core-marine-dev/MoorDyn/.github/workflows/python-wheels-emulated.yml@python
    with:
      os: '["ubuntu-22.04"]'
      arch: "s390x"
    secrets: inherit

  publish:
    runs-on: ${{ matrix.os }}
    needs: [build_wheels, build_Linux_x86_64, build_Windows_AMD64, build_MacOS_x86_64, build_Linux_i686, build_Linux_aarch64, build_Linux_ppc64le, build_Linux_s390x]
    strategy:
        matrix:
            os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4

      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-sdist
          path: dist/

      - name: Download Linux_x86_64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_x86_64
          path: dist/

      - name: Download Windows_AMD64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Windows_AMD64
          path: dist/

      - name: Download MacOS_x86_64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-MacOS_x86_64
          path: dist/

      - name: Download Linux_i686
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_i686
          path: dist/

      - name: Download Linux_aarch64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_aarch64
          path: dist/

      - name: Download Linux_ppc64le
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_ppc64le
          path: dist/

      - name: Download Linux_s390x
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_s390x
          path: dist/

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.MOORDYN_TESTPYPI_API }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
        if: github.event_name == 'push' && github.ref != 'refs/heads/main'

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.MOORDYN_PYPI_API }}
          repository-url: https://upload.pypi.org/legacy/
          skip-existing: true
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
